/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIImageImageColorizationApi_H
#define OAI_OAIImageImageColorizationApi_H

#include "OAIHttpRequest.h"

#include "OAIHTTPValidationError.h"
#include "OAIHttpRequest.h"
#include "OAIObject.h"
#include <QString>

#include <QObject>

namespace OpenAPI {

class OAIImageImageColorizationApi: public QObject {
    Q_OBJECT

public:
    OAIImageImageColorizationApi();
    OAIImageImageColorizationApi(QString host, QString basePath);
    ~OAIImageImageColorizationApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void applyImageImageColorizationPost(const OAIHttpRequestInputFileElement*& image, const QString& model);
    void getVersionsImageImageColorizationGet();
    
private:
    void applyImageImageColorizationPostCallback (OAIHttpRequestWorker * worker);
    void getVersionsImageImageColorizationGetCallback (OAIHttpRequestWorker * worker);
    
signals:
    void applyImageImageColorizationPostSignal(OAIObject summary);
    void getVersionsImageImageColorizationGetSignal(OAIObject summary);
    
    void applyImageImageColorizationPostSignalFull(OAIHttpRequestWorker* worker, OAIObject summary);
    void getVersionsImageImageColorizationGetSignalFull(OAIHttpRequestWorker* worker, OAIObject summary);
    
    void applyImageImageColorizationPostSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void getVersionsImageImageColorizationGetSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void applyImageImageColorizationPostSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getVersionsImageImageColorizationGetSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
