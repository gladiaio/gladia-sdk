/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAITextTextSimilarityApi_H
#define OAI_OAITextTextSimilarityApi_H

#include "OAIHttpRequest.h"

#include "OAIHTTPValidationError.h"
#include "OAIObject.h"
#include <QString>

#include <QObject>

namespace OpenAPI {

class OAITextTextSimilarityApi: public QObject {
    Q_OBJECT

public:
    OAITextTextSimilarityApi();
    OAITextTextSimilarityApi(QString host, QString basePath);
    ~OAITextTextSimilarityApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void applyTextTextSimilarityPost(const QString& sentence_1, const QString& sentence_2, const QString& model);
    void getVersionsTextTextSimilarityGet();
    
private:
    void applyTextTextSimilarityPostCallback (OAIHttpRequestWorker * worker);
    void getVersionsTextTextSimilarityGetCallback (OAIHttpRequestWorker * worker);
    
signals:
    void applyTextTextSimilarityPostSignal(OAIObject summary);
    void getVersionsTextTextSimilarityGetSignal(OAIObject summary);
    
    void applyTextTextSimilarityPostSignalFull(OAIHttpRequestWorker* worker, OAIObject summary);
    void getVersionsTextTextSimilarityGetSignalFull(OAIHttpRequestWorker* worker, OAIObject summary);
    
    void applyTextTextSimilarityPostSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void getVersionsTextTextSimilarityGetSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void applyTextTextSimilarityPostSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getVersionsTextTextSimilarityGetSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
