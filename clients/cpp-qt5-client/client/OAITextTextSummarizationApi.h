/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAITextTextSummarizationApi_H
#define OAI_OAITextTextSummarizationApi_H

#include "OAIHttpRequest.h"

#include "OAIHTTPValidationError.h"
#include "OAIObject.h"
#include <QString>

#include <QObject>

namespace OpenAPI {

class OAITextTextSummarizationApi: public QObject {
    Q_OBJECT

public:
    OAITextTextSummarizationApi();
    OAITextTextSummarizationApi(QString host, QString basePath);
    ~OAITextTextSummarizationApi();

    QString host;
    QString basePath;
    QMap<QString, QString> defaultHeaders;

    void applyTextTextSummarizationPost(const QString& text, const QString& source_language, const qint32& max_length, const qint32& min_length, const QString& model);
    void getVersionsTextTextSummarizationGet();
    
private:
    void applyTextTextSummarizationPostCallback (OAIHttpRequestWorker * worker);
    void getVersionsTextTextSummarizationGetCallback (OAIHttpRequestWorker * worker);
    
signals:
    void applyTextTextSummarizationPostSignal(OAIObject summary);
    void getVersionsTextTextSummarizationGetSignal(OAIObject summary);
    
    void applyTextTextSummarizationPostSignalFull(OAIHttpRequestWorker* worker, OAIObject summary);
    void getVersionsTextTextSummarizationGetSignalFull(OAIHttpRequestWorker* worker, OAIObject summary);
    
    void applyTextTextSummarizationPostSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString& error_str);
    void getVersionsTextTextSummarizationGetSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString& error_str);
    
    void applyTextTextSummarizationPostSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    void getVersionsTextTextSummarizationGetSignalEFull(OAIHttpRequestWorker* worker, QNetworkReply::NetworkError error_type, QString& error_str);
    
};

}
#endif
