{-
   FastAPI
   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   The version of the OpenAPI document: 0.1.0

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Request.TextTextTranslation exposing (applyTextTextTranslationPost, getVersionsTextTextTranslationGet)

import Data.HTTPValidationError as HTTPValidationError exposing (HTTPValidationError)
import Data.Object as Object exposing (Object)
import Dict
import Http
import Json.Decode as Decode
import Url.Builder as Url


basePath : String
basePath =
    "http://localhost"


applyTextTextTranslationPost :
    { onSend : Result Http.Error Object -> msg




    , inputString : Maybe (String)    , sourceLanguage : Maybe (String)    , targetLanguage : Maybe (String)    , model : Maybe (String)
    }
    -> Cmd msg
applyTextTextTranslationPost params =
    Http.request
        { method = "POST"
        , headers = []
        , url = Url.crossOrigin basePath
            ["text", "text", "translation"]
            (List.filterMap identity [Maybe.map (Url.string "input_string" ) params.inputString, Maybe.map (Url.string "source_language" ) params.sourceLanguage, Maybe.map (Url.string "target_language" ) params.targetLanguage, Maybe.map (Url.string "model" ) params.model])
        , body = Http.emptyBody
        , expect = Http.expectJson params.onSend Object.decoder
        , timeout = Just 30000
        , tracker = Nothing
        }


getVersionsTextTextTranslationGet :
    { onSend : Result Http.Error Object -> msg





    }
    -> Cmd msg
getVersionsTextTextTranslationGet params =
    Http.request
        { method = "GET"
        , headers = []
        , url = Url.crossOrigin basePath
            ["text", "text", "translation"]
            []
        , body = Http.emptyBody
        , expect = Http.expectJson params.onSend Object.decoder
        , timeout = Just 30000
        , tracker = Nothing
        }
