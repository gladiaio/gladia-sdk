{-
   FastAPI

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.2
   FastAPI API version: 0.1.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Fast.API.TextTextSummarization
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Fast.API.TextTextSummarization where

import Fast.Core
import Fast.MimeTypes
import Fast.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** TextTextSummarization

-- *** applyTextTextSummarizationPost

-- | @POST \/text\/text\/summarization\/@
-- 
-- Apply model for the summarization task for a given models
-- 
applyTextTextSummarizationPost 
  :: FastRequest ApplyTextTextSummarizationPost MimeNoContent A.Value MimeJSON
applyTextTextSummarizationPost =
  _mkRequest "POST" ["/text/text/summarization/"]

data ApplyTextTextSummarizationPost  
instance HasOptionalParam ApplyTextTextSummarizationPost ParamText where
  applyOptionalParam req (ParamText xs) =
    req `setQuery` toQuery ("text", Just xs)
instance HasOptionalParam ApplyTextTextSummarizationPost SourceLanguage where
  applyOptionalParam req (SourceLanguage xs) =
    req `setQuery` toQuery ("source_language", Just xs)
instance HasOptionalParam ApplyTextTextSummarizationPost MaxLength where
  applyOptionalParam req (MaxLength xs) =
    req `setQuery` toQuery ("max_length", Just xs)
instance HasOptionalParam ApplyTextTextSummarizationPost MinLength where
  applyOptionalParam req (MinLength xs) =
    req `setQuery` toQuery ("min_length", Just xs)
instance HasOptionalParam ApplyTextTextSummarizationPost ModelText where
  applyOptionalParam req (ModelText xs) =
    req `setQuery` toQuery ("model", Just xs)
-- | @application/json@
instance Produces ApplyTextTextSummarizationPost MimeJSON


-- *** getVersionsTextTextSummarizationGet

-- | @GET \/text\/text\/summarization\/@
-- 
-- Get list of models available for summarization
-- 
getVersionsTextTextSummarizationGet 
  :: FastRequest GetVersionsTextTextSummarizationGet MimeNoContent A.Value MimeJSON
getVersionsTextTextSummarizationGet =
  _mkRequest "GET" ["/text/text/summarization/"]

data GetVersionsTextTextSummarizationGet  
-- | @application/json@
instance Produces GetVersionsTextTextSummarizationGet MimeJSON

