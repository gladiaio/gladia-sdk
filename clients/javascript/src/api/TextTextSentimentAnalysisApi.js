/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HTTPValidationError from '../model/HTTPValidationError';

/**
* TextTextSentimentAnalysis service.
* @module api/TextTextSentimentAnalysisApi
* @version 0.1.0
*/
export default class TextTextSentimentAnalysisApi {

    /**
    * Constructs a new TextTextSentimentAnalysisApi. 
    * @alias module:api/TextTextSentimentAnalysisApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the applyTextTextSentimentAnalysisPost operation.
     * @callback module:api/TextTextSentimentAnalysisApi~applyTextTextSentimentAnalysisPostCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Apply model for the sentiment-analysis task for a given models
     * @param {Object} opts Optional parameters
     * @param {String} opts.text  (default to 'I like you. I love you')
     * @param {module:model/String} opts.model  (default to 'distilbert-base-uncased-finetuned-sst-2-english')
     * @param {module:api/TextTextSentimentAnalysisApi~applyTextTextSentimentAnalysisPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    applyTextTextSentimentAnalysisPost(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'text': opts['text'],
        'model': opts['model']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/text/text/sentiment-analysis/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVersionsTextTextSentimentAnalysisGet operation.
     * @callback module:api/TextTextSentimentAnalysisApi~getVersionsTextTextSentimentAnalysisGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get list of models available for sentiment-analysis
     * @param {module:api/TextTextSentimentAnalysisApi~getVersionsTextTextSentimentAnalysisGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getVersionsTextTextSentimentAnalysisGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/text/text/sentiment-analysis/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
