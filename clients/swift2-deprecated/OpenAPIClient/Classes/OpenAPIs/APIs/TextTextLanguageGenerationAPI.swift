//
// TextTextLanguageGenerationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Alamofire



public class TextTextLanguageGenerationAPI: APIBase {
    /**
     * enum for parameter model
     */
    public enum Model_applyTextTextLanguageGenerationPost: String { 
        case EleutheraiGptNeo27b = "EleutherAI-gpt-neo-2_7B"
    }

    /**
     Apply model for the language-generation task for a given models
     
     - parameter text: (query)  (optional)
     - parameter model: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func applyTextTextLanguageGenerationPost(text text: String? = nil, model: Model_applyTextTextLanguageGenerationPost? = nil, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        applyTextTextLanguageGenerationPostWithRequestBuilder(text: text, model: model).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Apply model for the language-generation task for a given models
     - POST /text/text/language-generation/     - parameter text: (query)  (optional)
     - parameter model: (query)  (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func applyTextTextLanguageGenerationPostWithRequestBuilder(text text: String? = nil, model: Model_applyTextTextLanguageGenerationPost? = nil) -> RequestBuilder<AnyObject> {
        let path = "/text/text/language-generation/"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "text": text,
            "model": model?.rawValue
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get list of models available for language-generation
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getVersionsTextTextLanguageGenerationGet(completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        getVersionsTextTextLanguageGenerationGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get list of models available for language-generation
     - GET /text/text/language-generation/
     - returns: RequestBuilder<AnyObject> 
     */
    public class func getVersionsTextTextLanguageGenerationGetWithRequestBuilder() -> RequestBuilder<AnyObject> {
        let path = "/text/text/language-generation/"
        let URLString = OpenAPIClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
