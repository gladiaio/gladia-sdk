// tslint:disable
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, RequiredError, HttpHeaders, HttpQuery, COLLECTION_FORMATS } from '../runtime';
import {
    HTTPValidationError,
} from '../models';

export interface ApplyTextTextSentimentAnalysisPostRequest {
    text?: string;
    model?: ApplyTextTextSentimentAnalysisPostModelEnum;
}

/**
 * no description
 */
export class TextTextSentimentAnalysisApi extends BaseAPI {

    /**
     * Apply model for the sentiment-analysis task for a given models
     */
    applyTextTextSentimentAnalysisPost(requestParameters: ApplyTextTextSentimentAnalysisPostRequest): Observable<object> {
        const queryParameters: HttpQuery = {};

        if (requestParameters.text !== undefined && requestParameters.text !== null) {
            queryParameters['text'] = requestParameters.text;
        }

        if (requestParameters.model !== undefined && requestParameters.model !== null) {
            queryParameters['model'] = requestParameters.model;
        }

        const headerParameters: HttpHeaders = {};

        return this.request<object>({
            path: `/text/text/sentiment-analysis/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });
    }

    /**
     * Get list of models available for sentiment-analysis
     */
    getVersionsTextTextSentimentAnalysisGet(): Observable<object> {
        const queryParameters: HttpQuery = {};

        const headerParameters: HttpHeaders = {};

        return this.request<object>({
            path: `/text/text/sentiment-analysis/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });
    }

}

/**
    * @export
    * @enum {string}
    */
export enum ApplyTextTextSentimentAnalysisPostModelEnum {
    ZeroShotClassificationFacebookBartLargeMnli = 'zero-shot-classification-facebook-bart-large-mnli',
    DistilbertBaseUncased = 'distilbert-base-uncased',
    NlptownBertBaseMultilingualUncasedSentiment = 'nlptown-bert-base-multilingual-uncased-sentiment',
    DistilbertBaseUncasedFinetunedSst2English = 'distilbert-base-uncased-finetuned-sst-2-english'
}
